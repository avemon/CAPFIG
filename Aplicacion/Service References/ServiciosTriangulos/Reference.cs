//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aplicacion.ServiciosTriangulos {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/CalculadoraTriangulos.Especificaciones")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiciosTriangulos.ICalculadoraTriangulos")]
    public interface ICalculadoraTriangulos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadoraTriangulos/Ejecutar", ReplyAction="http://tempuri.org/ICalculadoraTriangulos/EjecutarResponse")]
        double Ejecutar(bool calcularArea, double lado1, double lado2, double lado3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadoraTriangulos/Ejecutar", ReplyAction="http://tempuri.org/ICalculadoraTriangulos/EjecutarResponse")]
        System.Threading.Tasks.Task<double> EjecutarAsync(bool calcularArea, double lado1, double lado2, double lado3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadoraTriangulos/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ICalculadoraTriangulos/GetDataUsingDataContractResponse")]
        Aplicacion.ServiciosTriangulos.CompositeType GetDataUsingDataContract(Aplicacion.ServiciosTriangulos.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadoraTriangulos/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ICalculadoraTriangulos/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Aplicacion.ServiciosTriangulos.CompositeType> GetDataUsingDataContractAsync(Aplicacion.ServiciosTriangulos.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculadoraTriangulosChannel : Aplicacion.ServiciosTriangulos.ICalculadoraTriangulos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculadoraTriangulosClient : System.ServiceModel.ClientBase<Aplicacion.ServiciosTriangulos.ICalculadoraTriangulos>, Aplicacion.ServiciosTriangulos.ICalculadoraTriangulos {
        
        public CalculadoraTriangulosClient() {
        }
        
        public CalculadoraTriangulosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculadoraTriangulosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculadoraTriangulosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculadoraTriangulosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Ejecutar(bool calcularArea, double lado1, double lado2, double lado3) {
            return base.Channel.Ejecutar(calcularArea, lado1, lado2, lado3);
        }
        
        public System.Threading.Tasks.Task<double> EjecutarAsync(bool calcularArea, double lado1, double lado2, double lado3) {
            return base.Channel.EjecutarAsync(calcularArea, lado1, lado2, lado3);
        }
        
        public Aplicacion.ServiciosTriangulos.CompositeType GetDataUsingDataContract(Aplicacion.ServiciosTriangulos.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Aplicacion.ServiciosTriangulos.CompositeType> GetDataUsingDataContractAsync(Aplicacion.ServiciosTriangulos.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
